Grammar

    0 $accept: S $end

    1 S: A B

    2 A: a_TOK h_TOK
    3  | a_TOK b_TOK A c_TOK
    4  | a_TOK B c_TOK

    5 B: C D E

    6 C: d_TOK
    7  | e_TOK

    8 D: f_TOK D
    9  | f_TOK

   10 E: B
   11  | g_TOK


Terminals, with rules where they appear

$end (0) 0
error (256)
a_TOK (258) 2 3 4
b_TOK (259) 3
c_TOK (260) 3 4
d_TOK (261) 6
e_TOK (262) 7
f_TOK (263) 8 9
g_TOK (264) 11
h_TOK (265) 2


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
S (12)
    on left: 1, on right: 0
A (13)
    on left: 2 3 4, on right: 1 3
B (14)
    on left: 5, on right: 1 4 10
C (15)
    on left: 6 7, on right: 5
D (16)
    on left: 8 9, on right: 5 8
E (17)
    on left: 10 11, on right: 5


State 0

    0 $accept: . S $end

    a_TOK  shift, and go to state 1

    S  go to state 2
    A  go to state 3


State 1

    2 A: a_TOK . h_TOK
    3  | a_TOK . b_TOK A c_TOK
    4  | a_TOK . B c_TOK

    b_TOK  shift, and go to state 4
    d_TOK  shift, and go to state 5
    e_TOK  shift, and go to state 6
    h_TOK  shift, and go to state 7

    B  go to state 8
    C  go to state 9


State 2

    0 $accept: S . $end

    $end  shift, and go to state 10


State 3

    1 S: A . B

    d_TOK  shift, and go to state 5
    e_TOK  shift, and go to state 6

    B  go to state 11
    C  go to state 9


State 4

    3 A: a_TOK b_TOK . A c_TOK

    a_TOK  shift, and go to state 1

    A  go to state 12


State 5

    6 C: d_TOK .

    $default  reduce using rule 6 (C)


State 6

    7 C: e_TOK .

    $default  reduce using rule 7 (C)


State 7

    2 A: a_TOK h_TOK .

    $default  reduce using rule 2 (A)


State 8

    4 A: a_TOK B . c_TOK

    c_TOK  shift, and go to state 13


State 9

    5 B: C . D E

    f_TOK  shift, and go to state 14

    D  go to state 15


State 10

    0 $accept: S $end .

    $default  accept


State 11

    1 S: A B .

    $default  reduce using rule 1 (S)


State 12

    3 A: a_TOK b_TOK A . c_TOK

    c_TOK  shift, and go to state 16


State 13

    4 A: a_TOK B c_TOK .

    $default  reduce using rule 4 (A)


State 14

    8 D: f_TOK . D
    9  | f_TOK .

    f_TOK  shift, and go to state 14

    $default  reduce using rule 9 (D)

    D  go to state 17


State 15

    5 B: C D . E

    d_TOK  shift, and go to state 5
    e_TOK  shift, and go to state 6
    g_TOK  shift, and go to state 18

    B  go to state 19
    C  go to state 9
    E  go to state 20


State 16

    3 A: a_TOK b_TOK A c_TOK .

    $default  reduce using rule 3 (A)


State 17

    8 D: f_TOK D .

    $default  reduce using rule 8 (D)


State 18

   11 E: g_TOK .

    $default  reduce using rule 11 (E)


State 19

   10 E: B .

    $default  reduce using rule 10 (E)


State 20

    5 B: C D E .

    $default  reduce using rule 5 (B)
